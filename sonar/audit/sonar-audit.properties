#
# sonar-tools
# Copyright (C) 2019-2024 Olivier Korach
# mailto:olivier.korach AT gmail DOT com
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
#======================== SELECT AUDIT SCOPE CONFIGURATION =======================

# yes/no
audit.globalSettings = yes
audit.projects = yes
audit.qualityGates = yes
audit.qualityProfiles = yes
audit.users = yes
audit.groups = yes
# Portfolios and application audit (for DE (Apps) and EE, DCE (Apps, and Portfolios))
audit.portfolios = yes
audit.applications = yes

# Logs audit
audit.logs = yes

# Plugins audit
audit.plugins = yes
audit.plugins.whitelist = 

#===================== GLOBAL SETTINGS AUDIT CONFIGURATION ====================

#----------------------- GLOBAL SETTINGS CONFIGURATION ------------------------

# Audit (and warn) for default project public visibility
audit.globalSettings.defaultProjectVisibility = private

# Below settings audit structure is:
# For allowed range settings:
# audit.globalSettings.range.<auditSequenceNbr> = <setting>, <minAllowedValue>, <maxAllowedValue>, <auditSeverity>, <impactedArea>
# For allowed value settings:
# audit.globalSetting.value.<auditSequenceNbr> = <setting>, <allowedValue>, <auditSeverity>, <impactedArea>
# To check if a setting is set:
# audit.globalSettings.isSet.<auditSequenceNbr> = <setting>, <auditSeverity>, <impactedArea>

# Audit (and warn) if cross project duplication is enabled
audit.globalSettings.value.1 = sonar.cpd.cross_project, false, HIGH, PERFORMANCE

# Audit (and warn) if force authentication is disabled
audit.globalSettings.value.2 = sonar.forceAuthentication, true, HIGH, SECURITY

# Audit (and warn) if server base URL is not set
audit.globalSettings.isSet.1 = sonar.core.serverBaseURL, HIGH, OPERATIONS

#----------------------- DB CLEANER AUDIT CONFIGURATION -----------------------

# Audit (and warn) for suspicious DB cleaner settings
audit.globalSettings.dbcleaner = yes

# Audit DB Cleaner min/max time before purging issues
audit.globalSettings.range.1 = sonar.dbcleaner.daysBeforeDeletingClosedIssues, 10, 60, MEDIUM, PERFORMANCE

# Audit DB Cleaner min/max time before only keeping one analysis snapshot per day
audit.globalSettings.range.2 = sonar.dbcleaner.hoursBeforeKeepingOnlyOneSnapshotByDay, 12, 240, MEDIUM, PERFORMANCE

# Audit DB Cleaner min/max time before only keeping one analysis snapshot per week
audit.globalSettings.range.3 = sonar.dbcleaner.weeksBeforeKeepingOnlyOneSnapshotByWeek, 2, 12, MEDIUM, PERFORMANCE

# Audit DB Cleaner min/max time before only keeping one analysis snapshot per month
audit.globalSettings.range.4 = sonar.dbcleaner.weeksBeforeKeepingOnlyOneSnapshotByMonth, 26, 104, MEDIUM, PERFORMANCE

# Audit DB Cleaner min/max time before deleting all snapshots
audit.globalSettings.range.5 = sonar.dbcleaner.weeksBeforeDeletingAllSnapshots, 104, 260, MEDIUM, PERFORMANCE

# Audit DB Cleaner min/max time before deleting inactive branches (and PRs)
audit.globalSettings.range.6 = sonar.dbcleaner.daysBeforeDeletingInactiveBranches, 10, 60, MEDIUM, PERFORMANCE
audit.globalSettings.range.7 = sonar.dbcleaner.daysBeforeDeletingInactiveBranchesAndPRs, 10, 60, MEDIUM, PERFORMANCE


#------------------- TECH DEBT SETTINGS AUDIT CONFIGURATION -------------------

# Audit for suspicious technical debt thresholds, listed further below
audit.globalSettings.technicalDebt = yes

# Audit if dev cost of 1 line is not within expected range (affects Tech Debt ratio and Maintainability rating metrics)
audit.globalSettings.range.7 = sonar.technicalDebt.developmentCost, 20, 30, MEDIUM, CONFIGURATION

# Audit if maintainaibility rating thresholds are not within normal ranges
audit.globalSettings.maintainabilityRating.A.range.1 = 0.03, 0.05, MEDIUM, CONFIGURATION
audit.globalSettings.maintainabilityRating.A.range.2 = 0.02, 0.07, HIGH, CONFIGURATION
audit.globalSettings.maintainabilityRating.B.range.1 = 0.07, 0.10, MEDIUM, CONFIGURATION
audit.globalSettings.maintainabilityRating.B.range.2 = 0.05, 0.15, HIGH, CONFIGURATION
audit.globalSettings.maintainabilityRating.C.range.1 = 0.15, 0.20, MEDIUM, CONFIGURATION
audit.globalSettings.maintainabilityRating.C.range.2 = 0.10, 0.25, HIGH, CONFIGURATION
audit.globalSettings.maintainabilityRating.D.range.1 = 0.40, 0.50, MEDIUM, CONFIGURATION
audit.globalSettings.maintainabilityRating.D.range.2 = 0.30, 0.60, HIGH, CONFIGURATION

# Min max heap allocated to the web process
audit.web.heapMin = 1024
audit.web.heapMax = 2048

#======================= PERMISSIONS AUDIT CONFIGURATION ======================

#----------------------------- GLOBAL PERMISSIONS -----------------------------
# Audit (and warn) for suspicious global permissions
audit.globalSettings.permissions = yes

# Max allowed number of users/groups with global admin permission
audit.globalSettings.permissions.maxAdminUsers = 3
audit.globalSettings.permissions.maxAdminGroups = 2

# Max allowed number of users/groups with quality gate admin permission
audit.globalSettings.permissions.maxGateAdminUsers = 3
audit.globalSettings.permissions.maxGateAdminGroups = 2

# Max allowed number of users/groups with quality profile admin permission
audit.globalSettings.permissions.maxProfileAdminUsers = 3
audit.globalSettings.permissions.maxProfileAdminGroups = 2

# Max allowed number of users/groups with execute analysis permission
audit.globalSettings.permissions.maxScanUsers = 3
audit.globalSettings.permissions.maxScanGroups = 2

# Max allowed number of users/groups with create project permission
audit.globalSettings.permissions.maxCreateProjectUsers = 3
audit.globalSettings.permissions.maxCreateProjectGroups = 3

#----------------------------- PROJECT PERMISSIONS ----------------------------
# Project permission audit
# Max sure there are not too many users/groups with given project permissions
audit.projects.permissions.maxUsers = 5
audit.projects.permissions.maxAdminUsers = 2
audit.projects.permissions.maxGroups = 5
audit.projects.permissions.maxAdminGroups = 2
audit.projects.permissions.maxScanGroups = 1
audit.projects.permissions.maxIssueAdminGroups = 2
audit.projects.permissions.maxHotspotAdminGroups = 2
# audit.projects.permissions.anyone = yes

#========================= PROJECT AUDIT CONFIGURATION ========================

# Audit and warn) for projects likely to be duplicates
# Duplicate projects are detected from project keys that are similar
audit.projects.duplicates = yes

# Audit and warn) for projects that have been provisioned but never analyzed
audit.projects.neverAnalyzed = yes

# Audit (and warn) if project visibility is public
audit.projects.visibility = yes

# Audit (and warn) for suspicious projects permissions
audit.projects.permissions = yes

# Audit (and warn) for suspicious projects exclusions
audit.projects.exclusions = yes
# In the below:
# - All * . and ? symbols that relate to the SonarQube exclusion pattern should be escaped with \\
# - All symbols that have a special meaning for regex pattern matching shall not be escaped
audit.projects.suspiciousExclusionsPatterns = \\*\\*/[^\/]+/\\*\\*, \\*\\*/\\*[\.\w]*, \\*\\*/\\*, \\*\\*/\\*\\.(java|jav|cs|csx|py|php|js|ts|sql|html|css|cpp|c|h|hpp)\\*?
audit.projects.suspiciousExclusionsExceptions = \\*\\*/(__pycache__|libs|lib|vendor|node_modules)/\\*\\*

# Audit (and warn) for projects whose last analysis date is older than maxLastAnalysisAge
# Set property to 0 to turn off the check
audit.projects.maxLastAnalysisAge = 180

# Audit branches for zero LoC and last analysis date
audit.projects.branches = yes

# Audits for branches whose last analysis is older than a given number of days
# This parameter is only considered for branches not marked as "keep when inactive" 
# Set property to 0 to turn off the check
audit.projects.branches.maxLastAnalysisAge = 30

# Audits for PR whose last analysis is older than a given number of days
# Set property to 0 to turn off the check
audit.projects.pullRequests.maxLastAnalysisAge = 30

# Audits duplicate projects bound to same DevOps platform repo
audit.projects.bindings = yes

# Audits that projects with bindings have valid bindings
# Off by default since each project binding validation takes 1 to 3 seconds by project (with ALM bindings)
# which can be too time consuming for platform with large number of bound projects
audit.projects.bindings.validation = no

# Audits projects for disabled SCM
audit.project.scm.disabled = yes

# Audits projects with suspiciously high proportion of utility LoCs (XML, JSON...)
audit.projects.utilityLocs = yes

# Audits projects for analysis warnings
audit.projects.analysisWarnings = yes

# Audits projects with last background task failed
audit.projects.failedTasks = yes

# Audits projects analyzed with too old scanner version, 2 years by default
audit.projects.scannerMaxAge = 730

# Audits projects scanner consistency with project type
audit.projects.scanner = yes

#====================== QUALITY GATES AUDIT CONFIGURATION =====================

# Audit that there are not too many quality gates, this defeats company common governance
audit.qualitygates.maxNumber = 5

# Audit that quality gates don't have too many criterias, it's too complex and
# may prevent passing QG because of incorrect QG criteria
audit.qualitygates.maxConditions = 8

# Audits that QGs only use the meaningful metrics (those that make sense in a QG)
audit.qualitygates.allowedMetrics = new_reliability_rating, new_security_rating, new_maintainability_rating, new_bugs, new_vulnerabilities, new_security_hotspots, new_security_hotspots_reviewed, new_blocker_violations, new_critical_violations, new_major_violations, new_duplicated_lines_density, reliability_rating, security_rating

#------------------------ AUDIT OF METRICS ON NEW CODE ------------------------

# Audit that reliability, security, maintainability, hotspot review ratings, if used, are A
# if rating is used as a QG criteria
audit.qualitygates.new_reliability_rating.value = 1
audit.qualitygates.new_security_rating.value = 1
audit.qualitygates.new_hotspot_rating.value = 1
audit.qualitygates.new_maintainability_rating.value = 1

# Audit that coverage on new code, if used, is between 20% and 90%
audit.qualitygates.new_coverage.range = 20,90

# Audit that new bugs, vulnerabilities, unreviewed hotspots metric, if used, is 0
audit.qualitygates.new_bugs.value = 0
audit.qualitygates.new_vulnerabilities.value = 0
audit.qualitygates.new_security_hotspots.value = 0

# Audit that % of hotspots review on new code, if used, is 100%
audit.qualitygates.new_security_hotspots_reviewed.value = 100

# Audit that new blockers/critical/major issues metric, if used, is 0
audit.qualitygates.new_blocker_violations.value = 0
audit.qualitygates.new_critical_violations.value = 0
audit.qualitygates.new_major_violations.value = 0

# Audit that duplication on new code, if used, is between 1% and 5%
audit.qualitygates.new_duplicated_lines_density.range = 1, 5

#---------------------- AUDIT OF METRICS ON OVERALL CODE ----------------------

# Audit that reliability/security/hotspot rating on overall code, if used, is not too strict
audit.qualitygates.reliability_rating.range = 4, 4
audit.qualitygates.security_rating.range = 3, 4
audit.qualitygates.hotspot_rating.range = 4, 4


#===================== QUALITY PROFILES AUDIT CONFIGURATION ===================

# Audit QP not changed since a given number of days
audit.qualityProfiles.maxLastChangeAge = 180

# Audit quality profiles with too few rules (0.5 = 50% of all rules)
audit.qualityProfiles.minNumberOfRules = 0.5

# Audit quality profiles not used for a given number of days
audit.qualityProfiles.maxUnusedAge = 60

# Audit quality profiles for usage of deprecated rules
audit.qualityProfiles.checkDeprecatedRules = yes

#========================= USERS AND GROUPS AUDIT CONFIGURATION =========================

# Audit for users that have not logged in for a given number of days
audit.users.maxLoginAge = 180

# Audit for days after which a token should be revoked (and potentially renewed)
audit.tokens.maxAge = 90

# Audit  for days after which an unused token should be revoked (and potentially renewed)
audit.tokens.maxUnusedAge = 30

# Comma separated list of SonarQube users whose tokens are not considered for expiration
audit.tokens.neverExpire =

# Audit (and warn) for empty groups
audit.groups.empty = yes

#========================= PORTFOLIOS AND APPS AUDIT CONFIGURATION ========================


# Audit (and warn) for portfolios composed of 0 or/and 1 projects
audit.portfolios.empty = yes
audit.portfolios.singleton = yes

# Audit (and warn) for applications composed of 0 or/and 1 projects
audit.applications.empty = yes
audit.applications.singleton = yes
